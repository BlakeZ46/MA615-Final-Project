knitr::opts_chunk$set(
	echo = TRUE,
	message = FALSE,
	warning = FALSE
)
library(readr)
library(tidyverse)
library(stringr)
library(rstanarm)
library(knitr)
library(magrittr)
library(kableExtra)
library(gridExtra)
library(lubridate)
library(car) 
library(lme4)
library(arm)
library(lmerTest)
library(lattice)
require(gridExtra)
library(ggplot2)
library(PerformanceAnalytics)
library(rstanarm)
library(merTools)
library(dplyr)
library(data.table)
library(shiny)
```

```{r}
travel_time <- read.csv("~/Downloads/TravelTimes_2022/2022-Q1_LRTravelTimes.csv", header = TRUE)
View(travel_time)
```

EDA
```{r}
travel_time %>% count(route_id)
travel_time %>% count(service_date)
travel_time %>% count(from_stop_id)
travel_time2 <- subset(travel_time, select = -c(from_stop_id, to_stop_id,direction_id, start_time_sec, end_time_sec))
travel_af <- aggregate(. ~  service_date + route_id, data = travel_time2, mean)
travel_final <- subset(travel_af, service_date %in% c("2022-01-01","2022-01-02","2022-01-03","2022-01-04","2022-01-05","2022-01-06","2022-01-07","2022-01-08","2022-01-09","2022-01-10","2022-01-11","2022-01-12","2022-01-13","2022-01-14","2022-01-15","2022-01-16","2022-01-17","2022-01-18","2022-01-19","2022-01-20","2022-01-21","2022-01-22","2022-01-23","2022-01-24","2022-01-25","2022-01-26","2022-01-27","2022-01-28","2022-01-29","2022-01-30","2022-01-31"))
time_mean <- ggplot(data = travel_final) + 
  aes(x = service_date, y = travel_time_sec) + 
  geom_point(aes(color = factor(route_id)), size = .6) + 
  geom_smooth(aes(color = factor(route_id)), method = "lm", se = FALSE, formula = 'y ~ x') + 
  theme(axis.text.x = element_text(angle = 90)) +
  labs(title = "Mean Travel Time in January 2022", x = "Date", y = "Mean Travel Time(sec)")
travel_weekday <- subset(travel_final, service_date %in% c("2022-01-03","2022-01-04","2022-01-05","2022-01-06","2022-01-07","2022-01-10","2022-01-11","2022-01-12","2022-01-13","2022-01-14","2022-01-17","2022-01-18","2022-01-19","2022-01-20","2022-01-21","2022-01-24","2022-01-25","2022-01-26","2022-01-27","2022-01-28","2022-01-31"))
travel_weekends <- subset(travel_final, service_date %in% c("2022-01-01","2022-01-02","2022-01-08","2022-01-09","2022-01-15","2022-01-16","2022-01-22","2022-01-23","2022-01-29","2022-01-30"))
time_weekdays <- ggplot(data = travel_weekday) + 
  aes(x = service_date, y = travel_time_sec) + 
  geom_point(aes(color = factor(route_id)), size = .6) + 
  geom_smooth(aes(color = factor(route_id)), method = "lm", se = FALSE, formula = 'y ~ x') + 
  theme(axis.text.x = element_text(angle = 90)) +
  labs(title = "Mean Travel Time in Weekdays in January 2022", x = "Date", y = "Mean Travel Time(sec)")
time_weekends <- ggplot(data = travel_weekends) + 
  aes(x = service_date, y = travel_time_sec) + 
  geom_point(aes(color = factor(route_id)), size = .6) + 
  geom_smooth(aes(color = factor(route_id)), method = "lm", se = FALSE, formula = 'y ~ x') + 
  theme(axis.text.x = element_text(angle = 90)) +
  labs(title = "Mean Travel Time in Weekends in January 2022", x = "Date", y = "Mean Travel Time(sec)")
```

Shinny
```{r}
ui <- shinyUI(fluidPage(
  
  ## the area for title
  headerPanel(title = 'map'),   
  
  ## plot the leaflet in the whole page
  leafletOutput(outputId = 'map',width = '1920px',height = '1080px'),
  
  ## control inputs panel and button
  absolutePanel(width = 400,top=150,left = 'auto',
                textInput(inputId = 'Start',label = 'FROM',width = "50%"),
                textInput(inputId = 'Destination',label = 'TO',width = "50%"),
                textOutput(outputId = 'Request'),
                submitButton(text = "Submit")
  )
))



server <- function(input, output){
  output$map <- renderLeaflet({
  routes <- route(input$Start,input$Destination,structure = "route", output = "simple")
  m <- leaflet()
  m <- m%>%addTiles()
  m %>% addPolylines(routes$lon,routes$lat)
  
  
 })
}
```
